/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Int8 = ColumnType<string, bigint | number | string, bigint | number | string>;

export type Json = JsonValue;

export type JsonArray = JsonValue[];

export type JsonObject = {
  [x: string]: JsonValue | undefined;
};

export type JsonPrimitive = boolean | number | string | null;

export type JsonValue = JsonArray | JsonObject | JsonPrimitive;

export type LocationType = "city" | "country" | "neighborhood" | "state";

export type RecipeType = "book" | "website" | "youtube";

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export type UnitType = "volume" | "weight";

export interface AwardDistinction {
  award_type_id: string;
  id: string;
  name: string;
}

export interface AwardType {
  description: string | null;
  id: string;
  name: string;
}

export interface BookingProvider {
  id: string;
  name: string | null;
}

export interface CoffeeBeans {
  altitude: number | null;
  farm_id: number | null;
  id: Generated<number>;
  location_id: string | null;
  producer_id: number | null;
  roast_date: Timestamp | null;
  roaster_id: number | null;
  tasting_notes: string | null;
  varietal_id: number | null;
}

export interface CoffeeFarms {
  id: Generated<number>;
  location_id: string;
  name: string;
}

export interface CoffeeProcesses {
  id: Generated<number>;
  name: string;
}

export interface CoffeeProducers {
  id: Generated<number>;
  name: string;
}

export interface CoffeeRoasters {
  id: Generated<number>;
  location_id: string | null;
  name: string;
}

export interface CoffeeVarietals {
  id: Generated<number>;
  name: string;
}

export interface Cuisine {
  id: string;
  name: string;
}

export interface Currency {
  abbr: string;
  id: string;
  name: string;
  symbol: string;
}

export interface DrizzleDrizzleMigrations {
  created_at: Int8 | null;
  hash: string;
  id: Generated<number>;
}

export interface EnrichedRestaurant {
  awards: Json | null;
  booking: Json | null;
  cuisines: Json | null;
  id: number | null;
  locations: Json | null;
  name: string | null;
  phone: string | null;
  postcode: string | null;
  street_address: string | null;
  website: string | null;
}

export interface FbAffinity {
  entry_id: number | null;
  id: Generated<number>;
}

export interface FbAffinityEntry {
  affinity_id: number;
  entry_id: number;
}

export interface FbAssociation {
  associated_entry: number | null;
  association_text: string;
  example: string[] | null;
  id: Generated<number>;
  main_entry: number | null;
  narrower: string[] | null;
  strength: number;
}

export interface FbDish {
  attribution: string | null;
  description: string;
  entry_id: number | null;
  id: Generated<number>;
}

export interface FbEntry {
  aka: string | null;
  example: string | null;
  id: Generated<number>;
  name: string;
  see_also: string | null;
}

export interface FbMeta {
  entry_id: number | null;
  id: Generated<number>;
  key: string;
  value: string | null;
}

export interface FbNote {
  attribution: string | null;
  entry_id: number | null;
  id: Generated<number>;
  note: string;
}

export interface IngredientCategory {
  category_id: number;
  ingredient_id: number;
}

export interface Ingredients {
  id: Generated<number>;
  name: string;
}

export interface Locations {
  abbr: string | null;
  id: string;
  name: string;
  parent_id: string | null;
  type: LocationType;
}

export interface MigrationsLog {
  applied_at: Generated<Timestamp | null>;
  filename: string;
  id: Generated<number>;
}

export interface RecipeIngredients {
  id: Generated<number>;
  ingredient_id: number | null;
  ingredient_name: string | null;
  preparation: string | null;
  quantifier: string | null;
  quantity: number;
  raw_text: string | null;
  recipe_part_id: number | null;
  unit_id: number | null;
}

export interface RecipePart {
  description: string | null;
  id: Generated<number>;
  position: number;
  recipe_id: number | null;
}

export interface Recipes {
  description: string | null;
  id: Generated<number>;
  name: string;
  name_native: string | null;
  source_id: number | null;
}

export interface RecipeSource {
  author: string | null;
  description: string | null;
  id: Generated<number>;
  name: string;
  type: RecipeType;
  url: string | null;
}

export interface Restaurant {
  currency_id: string | null;
  id: Generated<number>;
  latitude: number | null;
  location_id: string | null;
  longitude: number | null;
  name: string;
  phone: string | null;
  postcode: string | null;
  street_address: string | null;
  website: string | null;
}

export interface RestaurantAward {
  award_date: Timestamp;
  award_type_id: string;
  created_at: Generated<Timestamp | null>;
  description: string | null;
  id: Generated<number>;
  metadata: Json | null;
  rank: number | null;
  restaurant_id: number;
  url: string | null;
}

export interface RestaurantAwardDistinction {
  distinction_id: string;
  id: Generated<number>;
  restaurant_award_id: number;
}

export interface RestaurantAwards {
  awards: Json | null;
  id: number | null;
  name: string | null;
}

export interface RestaurantBooking {
  provider_id: string | null;
  restaurant_id: number | null;
  url: string;
}

export interface RestaurantBookingView {
  booking: Json | null;
  id: number | null;
}

export interface RestaurantCuisine {
  cuisine_id: string;
  restaurant_id: number;
}

export interface RestaurantCuisines {
  cuisines: Json | null;
  id: number | null;
}

export interface RestaurantLocations {
  id: number | null;
  locations: Json | null;
}

export interface RestaurantSchedule {
  close: string | null;
  closed: Generated<boolean>;
  day: number;
  id: Generated<number>;
  open: string | null;
}

export interface RestaurantSchedules {
  restaurant_id: number | null;
  schedule_id: number | null;
}

export interface Units {
  abbreviation: string | null;
  id: Generated<number>;
  name: string;
  size: number | null;
  type: UnitType | null;
}

export interface Users {
  email: string;
  name: string;
}

export interface DB {
  award_distinction: AwardDistinction;
  award_type: AwardType;
  booking_provider: BookingProvider;
  coffee_beans: CoffeeBeans;
  coffee_farms: CoffeeFarms;
  coffee_processes: CoffeeProcesses;
  coffee_producers: CoffeeProducers;
  coffee_roasters: CoffeeRoasters;
  coffee_varietals: CoffeeVarietals;
  cuisine: Cuisine;
  currency: Currency;
  "drizzle.__drizzle_migrations": DrizzleDrizzleMigrations;
  enriched_restaurant: EnrichedRestaurant;
  fb_affinity: FbAffinity;
  fb_affinity_entry: FbAffinityEntry;
  fb_association: FbAssociation;
  fb_dish: FbDish;
  fb_entry: FbEntry;
  fb_meta: FbMeta;
  fb_note: FbNote;
  ingredient_category: IngredientCategory;
  ingredients: Ingredients;
  locations: Locations;
  migrations_log: MigrationsLog;
  recipe_ingredients: RecipeIngredients;
  recipe_part: RecipePart;
  recipe_source: RecipeSource;
  recipes: Recipes;
  restaurant: Restaurant;
  restaurant_award: RestaurantAward;
  restaurant_award_distinction: RestaurantAwardDistinction;
  restaurant_awards: RestaurantAwards;
  restaurant_booking: RestaurantBooking;
  restaurant_booking_view: RestaurantBookingView;
  restaurant_cuisine: RestaurantCuisine;
  restaurant_cuisines: RestaurantCuisines;
  restaurant_locations: RestaurantLocations;
  restaurant_schedule: RestaurantSchedule;
  restaurant_schedules: RestaurantSchedules;
  units: Units;
  users: Users;
}
